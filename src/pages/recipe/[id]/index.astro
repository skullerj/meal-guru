---
import Layout from "../../../layouts/Layout.astro";
import { getRecipes } from "../../../lib/database";

export async function getStaticPaths() {
  const recipes = await getRecipes();
  return recipes.map((recipe) => ({
    params: { id: recipe.id },
    props: { recipe },
  }));
}

const { recipe } = Astro.props;
---

<Layout>
    <section class="container mx-auto p-6 bg-white shadow-md rounded-lg">
        <div class="mb-6 flex justify-between items-center">
            <a href="/" class="text-blue-500 hover:underline"
                >‚Üê Back to recipes</a
            >
            <a
                href={`/recipe/${recipe.id}/edit`}
                class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
            >
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                </svg>
                Edit Recipe
            </a>
        </div>

        <h1 class="text-2xl font-bold mb-6">Shopping List: {recipe.name}</h1>

        <div class="mb-6">
            <h2 class="text-lg font-semibold mb-4">Ingredients to Buy:</h2>
            <div class="space-y-3">
                {
                    recipe.ingredients.map((ingredient) => (
                        <div class="flex items-center space-x-3 p-3 border border-gray-200 rounded">
                            <input
                                type="checkbox"
                                id={ingredient.id}
                                class="ingredient-checkbox w-5 h-5"
                                data-shelf={ingredient.shelf.toString()}
                            />
                            <label
                                for={ingredient.id}
                                class="flex-1 cursor-pointer"
                            >
                                <span class="font-medium">
                                    {ingredient.name}
                                </span>
                                <span class="text-gray-600 ml-2">
                                    {ingredient.amount} {ingredient.unit}
                                    {ingredient.shelf && (
                                        <span class="text-green-600 ml-2">
                                            (shelf item)
                                        </span>
                                    )}
                                </span>
                            </label>
                            {ingredient.source.url && (
                                <a
                                    href={ingredient.source.url}
                                    onclick={`window.open('${ingredient.source.url}', '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes'); return false;`}
                                    class="text-blue-500 hover:underline text-sm"
                                >
                                    View
                                </a>
                            )}
                        </div>
                    ))
                }
            </div>
        </div>

        <div class="mt-8">
            <a
                href={`/recipe/${recipe.id}/cook`}
                class="bg-green-500 text-white px-6 py-3 rounded text-lg"
                id="cook-button"
            >
                Start Cooking
            </a>
            <a href=""> </a>
            <p class="text-sm text-gray-600 mt-2">
                Make sure you have all ingredients before cooking!
            </p>
        </div>
    </section>
</Layout>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const checkboxes = document.querySelectorAll(".ingredient-checkbox");
        const cookButton = document.getElementById("cook-button");

        function updateCookButton() {
            const allChecked = Array.from(checkboxes).every((cb) => cb.checked);
            if (allChecked) {
                cookButton?.classList.remove("bg-green-500");
                cookButton?.classList.add("bg-green-600");
                cookButton.textContent = "Ready to Cook!";
            } else {
                cookButton?.classList.remove("bg-green-600");
                cookButton?.classList.add("bg-green-500");
                cookButton.textContent = "Start Cooking";
            }
        }

        checkboxes.forEach((checkbox) => {
            checkbox.addEventListener("change", updateCookButton);
        });
    });
</script>
